<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/rss2full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><rss xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0" version="2.0">

<channel>
	<title>Ruby Inside</title>
	
	<link>http://www.rubyinside.com</link>
	<description />
	<lastBuildDate>Fri, 08 Jan 2010 15:20:21 +0000</lastBuildDate>
	<generator>http://wordpress.org/?v=2.8.4</generator>
	<language>en</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
			<atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/rss+xml" href="http://feeds.feedburner.com/RubyInside" /><feedburner:emailServiceId>RubyInside</feedburner:emailServiceId><feedburner:feedburnerHostname>http://feedburner.google.com</feedburner:feedburnerHostname><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com" /><item>
		<title>7 Top Ruby and Rails Jobs for January 2010</title>
		<link>http://feedproxy.google.com/~r/RubyInside/~3/nFtgYTqCnhE/7-top-ruby-and-rails-jobs-for-january-2010-2935.html</link>
		<comments>http://www.rubyinside.com/7-top-ruby-and-rails-jobs-for-january-2010-2935.html#comments</comments>
		<pubDate>Fri, 08 Jan 2010 15:20:21 +0000</pubDate>
		<dc:creator>Peter Cooper</dc:creator>
				<category><![CDATA[Miscellaneous]]></category>

		<guid isPermaLink="false">http://www.rubyinside.com/7-top-ruby-and-rails-jobs-for-january-2010-2935.html</guid>
		<description><![CDATA[<p>Looking for a Ruby or Rails job? There are still some good ones out there. They're getting posted daily on <a href="http://jobs.rubynow.com/">jobs.rubynow.com</a> but we've got 6 special ones of our own that have come in via <a href="http://ruby.jobamatic.com/a/jbb/find-jobs">the Ruby Inside jobs board</a>. Jobs this month come from the United Kingdom and the US (Portland, Chicago, Birmingham and Santa Barbara) and are, as usual, Rails heavy.</p>]]></description>
			<content:encoded><![CDATA[<p>Looking for a Ruby or Rails job? There are still some good ones out there. They're getting posted daily on <a href="http://jobs.rubynow.com/">jobs.rubynow.com</a> but we've got 6 special ones of our own that have come in via <a href="http://ruby.jobamatic.com/a/jbb/find-jobs">the Ruby Inside jobs board</a>. Jobs this month come from the United Kingdom and the US (Portland, Chicago, Birmingham and Santa Barbara) and are, as usual, Rails heavy.</p>
<h3>January 2010's Jobs</h3>
<p><img src="http://www.rubyinside.com/wp-content/uploads/2010/01/billmonitor.png" width="128" height="34" alt="billmonitor.png" style="float:left; margin-right:12px; margin-bottom:12px;" /> <a href="http://billmonitor.theresumator.com/apply/YU1PgK/source:RUBYINSIDE"><b>Rails Developer at</b> <i><b>BillMonitor</b></i></a> <b>(Oxford, United Kingdom)</b> — Billmonitor is a British mobile phone comparison service and they're looking for a Rails developer to work side-by-side with their Web design team to develop new features and functionality for their site. <a href="http://billmonitor.theresumator.com/apply/YU1PgK/source:RUBYINSIDE">Learn more.</a></p>
<p><img src="http://www.rubyinside.com/wp-content/uploads/2010/01/newrelic.png" width="127" height="35" alt="newrelic.png" style="float:left; margin-right:12px; margin-bottom:12px;" /><a href="http://ruby.jobamatic.com/a/jbb/job-details/165476"><b>Ruby on Rails Developer at</b> <i><b>New Relic</b></i></a> <b>(Portland, OR)</b> — New Relic is the leading provider of application monitoring services in the Ruby world and they're looking for an experienced Rails developer to join their fun and growing company. You need to be familiar with agile development processes (such as TDD and continuous integration), Rails, Javascript and CSS. <a href="http://ruby.jobamatic.com/a/jbb/job-details/165476">Learn more.</a></p>
<p><img src="http://www.rubyinside.com/wp-content/uploads/2010/01/groupon.png" width="129" height="51" alt="groupon.png" style="float:left; margin-right:12px; margin-bottom:12px;" /></p>
<p><a href="http://ruby.jobamatic.com/a/jbb/job-details/166499"><b>Senior Rails Developer at</b> <i><b>Groupon</b></i></a> <b>(Chicago, IL)</b> — <a href="http://en.wikipedia.org/wiki/Groupon">Groupon</a> is a deal-of-the-day site that is available in multiple localized versions for different US cities. They're seeking expert Rails developers with proven records in working on high traffic sites. <a href="http://ruby.jobamatic.com/a/jbb/job-details/166499">Learn more.</a></p>
<p style="clear: left"><a href="http://ruby.jobamatic.com/a/jbb/job-details/168553"><b>Senior <i>and</i> Junior Rails Developers at</b> <i><b>Insight Card Services</b></i></a> <b>(Birmingham, AL)</b> - Insight Card Services is a provider of prepaid credit cards and they're looking for both senior and junior Rails developers to join their team. Senior level requires at least 10 years of software development experience (2 in Rails) along with team leader skills. The junior level requires 2 years of software development experience and familiarity with Rails. <a href="http://ruby.jobamatic.com/a/jbb/job-details/168553">Learn more.</a></p>
<p><img src="http://www.rubyinside.com/wp-content/uploads/2010/01/snapizzi.png" width="130" height="52" alt="snapizzi.png" style="float:left; margin-right:12px; margin-bottom:12px;" /></p>
<p><a href="http://ruby.jobamatic.com/a/jbb/job-details/170683"><b>Software Developer at</b> <i><b>Snapizzi</b></i></a> <b>(Santa Barbara, CA)</b> — Snapizzi is an online photography e-commerce site. They're looking for an outstanding software engineer with 2 to 15 years of experience to join their development team. It's a full-time position and located in Santa Barbara, CA. A Bachelors in Comp Sci or Engineering is necessary, along with proficiency with Ruby, Rails, and MySQL. <a href="http://ruby.jobamatic.com/a/jbb/job-details/170683">Learn more.</a></p>
<p><img src="http://www.rubyinside.com/wp-content/uploads/2010/01/alphasights.png" width="131" height="70" alt="alphasights.png" style="float:left; margin-right:12px; margin-bottom:12px;" /></p>
<p><a href="http://www.alphasights.com/about-us/careers/ruby-on-rails-developer/"><b>Rails Developer at <i>AlphaSights</i></b></a> <b>(London, UK)</b> — AlphaSights is an independent, privately-owned information services and advisory firm for institutional buy-side investors. They're looking for a Rails developer with database and object design experience, as well as experience with JavaScript, HAML, and SASS. You'll also need to be familiar with UNIX-like environments. <a href="http://www.alphasights.com/about-us/careers/ruby-on-rails-developer/">Learn more.</a></p>
<h3 style="clear: left">Want To Post A Job?</h3>
<p>If you want Ruby and Rails Inside to promote your own Ruby/Rails career openings, <a href="http://www.rubyinside.com/post-a-job">check out our new Post A Job page</a>. It's $249 for 60 days of exposure with a link on all Ruby Inside and Rails Inside pages, exposure through Simply Hired, and inclusion on a post like this that goes out to all 22,000 subscribers. Most ads get 1-2,000 direct views during their run (and linked from about 450,000 pageviews on our sites in all). If you drop a comment on this post, we can also sort you out with a discount code..</p>
<div class="feedflare">
<a href="http://feeds.feedburner.com/~ff/RubyInside?a=nFtgYTqCnhE:Br4Mx9Wliqw:yIl2AUoC8zA"><img src="http://feeds.feedburner.com/~ff/RubyInside?d=yIl2AUoC8zA" border="0"></img></a> <a href="http://feeds.feedburner.com/~ff/RubyInside?a=nFtgYTqCnhE:Br4Mx9Wliqw:D7DqB2pKExk"><img src="http://feeds.feedburner.com/~ff/RubyInside?i=nFtgYTqCnhE:Br4Mx9Wliqw:D7DqB2pKExk" border="0"></img></a> <a href="http://feeds.feedburner.com/~ff/RubyInside?a=nFtgYTqCnhE:Br4Mx9Wliqw:3H-1DwQop_U"><img src="http://feeds.feedburner.com/~ff/RubyInside?i=nFtgYTqCnhE:Br4Mx9Wliqw:3H-1DwQop_U" border="0"></img></a> <a href="http://feeds.feedburner.com/~ff/RubyInside?a=nFtgYTqCnhE:Br4Mx9Wliqw:F7zBnMyn0Lo"><img src="http://feeds.feedburner.com/~ff/RubyInside?i=nFtgYTqCnhE:Br4Mx9Wliqw:F7zBnMyn0Lo" border="0"></img></a>
</div><img src="http://feeds.feedburner.com/~r/RubyInside/~4/nFtgYTqCnhE" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://www.rubyinside.com/7-top-ruby-and-rails-jobs-for-january-2010-2935.html/feed</wfw:commentRss>
		<slash:comments>1</slash:comments>
		<feedburner:origLink>http://www.rubyinside.com/7-top-ruby-and-rails-jobs-for-january-2010-2935.html</feedburner:origLink></item>
		<item>
		<title>Cramp: Asychronous Event-Driven Ruby Web App Framework</title>
		<link>http://feedproxy.google.com/~r/RubyInside/~3/rh0MXZYo2EQ/cramp-asychronous-event-driven-ruby-web-app-framework-2928.html</link>
		<comments>http://www.rubyinside.com/cramp-asychronous-event-driven-ruby-web-app-framework-2928.html#comments</comments>
		<pubDate>Thu, 07 Jan 2010 23:36:00 +0000</pubDate>
		<dc:creator>Peter Cooper</dc:creator>
				<category><![CDATA[Cool]]></category>
		<category><![CDATA[Miscellaneous]]></category>

		<guid isPermaLink="false">http://www.rubyinside.com/cramp-asychronous-event-driven-ruby-web-app-framework-2928.html</guid>
		<description><![CDATA[<p><img src="http://www.rubyinside.com/wp-content/uploads/2010/01/got-the-cramp.png" width="101" height="110" alt="got-the-cramp.png" style="float:left; margin-right:12px; margin-bottom:12px; border:1px #000000 solid;" /><a href="http://m.onkey.org/2010/1/7/introducing-cramp">Cramp</a> <sup>(<a href="http://github.com/lifo/cramp">GitHub repo</a>)</sup>is a new, asychronous evented Web app framework by Pratik Naik of 37signals (and the Rails core team). It's built around Ruby's <a href="http://rubyeventmachine.com/">EventMachine</a> library and was designed to use event-driven I/O throughout - making it ideal for situations where you need to handle a large number of open connections (such as <a href="http://en.wikipedia.org/wiki/Comet_(programming)">Comet</a> systems or streaming APIs.)</p>]]></description>
			<content:encoded><![CDATA[<p><img src="http://www.rubyinside.com/wp-content/uploads/2010/01/got-the-cramp.png" width="101" height="110" alt="got-the-cramp.png" style="float:left; margin-right:12px; margin-bottom:12px; border:1px #000000 solid;" /><a href="http://m.onkey.org/2010/1/7/introducing-cramp">Cramp</a> <sup>(<a href="http://github.com/lifo/cramp">GitHub repo</a>)</sup>is a new, asychronous evented Web app framework by Pratik Naik of 37signals (and the Rails core team). It's built around Ruby's <a href="http://rubyeventmachine.com/">EventMachine</a> library and was designed to use event-driven I/O throughout - making it ideal for situations where you need to handle a large number of open connections (such as <a href="http://en.wikipedia.org/wiki/Comet_(programming)">Comet</a> systems or streaming APIs.)</p>
<p>Out of the box, Cramp relies on Rails 3.0-pre's ActiveSupport and <a href="http://github.com/rails/rails/tree/master/activemodel">ActiveModel</a> libraries (and won't work with earlier versions). Using these, it presents you with two layers to develop: controllers and models. Cramp controllers are ostensibly Rack compliant (Rack was designed primarily for synchronous scenarios) but <a href="http://code.macournoyer.com/thin/">Thin</a> is currently the only HTTP daemon that can run Cramp apps due to its asynchronous app support.</p>
<p>Cramp models are built around a custom asynchronous MySQL-only ORM built on top of <a href="http://github.com/rails/arel">Arel</a> and ActiveModel. Compared to the controllers, it seems to be at a very embryonic stage though it supports data methods like all, first, each, where, select, group, order, limit and offset. For basic CRUD functionality, it should do the job fine.</p>
<p>Pratik has a basic "hello world" example to show off the general structure of a Cramp app:</p>
<p><img src="http://www.rubyinside.com/wp-content/uploads/2010/01/cramp-hello-world.png" width="415" height="200" alt="cramp-hello-world.png" /></p>
<p>To learn more, read Pratik's <a href="http://m.onkey.org/2010/1/7/introducing-cramp">Introducing Cramp blog post</a>. He's presented a lot of examples to get you going.</p>
<div class="feedflare">
<a href="http://feeds.feedburner.com/~ff/RubyInside?a=rh0MXZYo2EQ:FrmX91wMHhg:yIl2AUoC8zA"><img src="http://feeds.feedburner.com/~ff/RubyInside?d=yIl2AUoC8zA" border="0"></img></a> <a href="http://feeds.feedburner.com/~ff/RubyInside?a=rh0MXZYo2EQ:FrmX91wMHhg:D7DqB2pKExk"><img src="http://feeds.feedburner.com/~ff/RubyInside?i=rh0MXZYo2EQ:FrmX91wMHhg:D7DqB2pKExk" border="0"></img></a> <a href="http://feeds.feedburner.com/~ff/RubyInside?a=rh0MXZYo2EQ:FrmX91wMHhg:3H-1DwQop_U"><img src="http://feeds.feedburner.com/~ff/RubyInside?i=rh0MXZYo2EQ:FrmX91wMHhg:3H-1DwQop_U" border="0"></img></a> <a href="http://feeds.feedburner.com/~ff/RubyInside?a=rh0MXZYo2EQ:FrmX91wMHhg:F7zBnMyn0Lo"><img src="http://feeds.feedburner.com/~ff/RubyInside?i=rh0MXZYo2EQ:FrmX91wMHhg:F7zBnMyn0Lo" border="0"></img></a>
</div><img src="http://feeds.feedburner.com/~r/RubyInside/~4/rh0MXZYo2EQ" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://www.rubyinside.com/cramp-asychronous-event-driven-ruby-web-app-framework-2928.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		<feedburner:origLink>http://www.rubyinside.com/cramp-asychronous-event-driven-ruby-web-app-framework-2928.html</feedburner:origLink></item>
		<item>
		<title>CoffeeScript: A New Language With A Pure Ruby Compiler</title>
		<link>http://feedproxy.google.com/~r/RubyInside/~3/4Kie8Rpj9DM/coffeescript-a-new-language-with-a-pure-ruby-compiler-2921.html</link>
		<comments>http://www.rubyinside.com/coffeescript-a-new-language-with-a-pure-ruby-compiler-2921.html#comments</comments>
		<pubDate>Mon, 04 Jan 2010 23:03:19 +0000</pubDate>
		<dc:creator>Peter Cooper</dc:creator>
				<category><![CDATA[Cool]]></category>

		<guid isPermaLink="false">http://www.rubyinside.com/coffeescript-a-new-language-with-a-pure-ruby-compiler-2921.html</guid>
		<description><![CDATA[<p><img src="http://www.rubyinside.com/wp-content/uploads/2010/01/coffeescript.png" width="59" height="69" alt="coffeescript.png" style="float:left; margin-right:12px; margin-bottom:12px; border:1px #000000 solid;" /> <a href="http://jashkenas.github.com/coffee-script/">CoffeeScript</a> <sup>(<a href="http://github.com/jashkenas/coffee-script/">GitHub repo</a>)</sup> is a new programming language with a pure Ruby compiler. Creator Jeremy Ashkenas calls it "JavaScript's less ostentatious kid brother" - mostly because it compiles <i>into</i> JavaScript and shares most of the same constructs, but with a different, tighter syntax.</p>]]></description>
			<content:encoded><![CDATA[<p><img src="http://www.rubyinside.com/wp-content/uploads/2010/01/coffeescript.png" width="59" height="69" alt="coffeescript.png" style="float:left; margin-right:12px; margin-bottom:12px; border:1px #000000 solid;" /> <a href="http://jashkenas.github.com/coffee-script/">CoffeeScript</a> <sup>(<a href="http://github.com/jashkenas/coffee-script/">GitHub repo</a>)</sup> is a new programming language with a pure Ruby compiler. Creator Jeremy Ashkenas calls it "JavaScript's less ostentatious kid brother" - mostly because it compiles <i>into</i> JavaScript and shares most of the same constructs, but with a different, tighter syntax.</p>
<p>To get a feel for the language, check out this example code (CoffeeScript on the left, resulting JavaScript on the right):</p>
<p><img src="http://www.rubyinside.com/wp-content/uploads/2010/01/cofeescriptdemo.png" width="640" height="485" alt="cofeescriptdemo.png" /></p>
<p>As a Ruby project, you can get the CoffeeScript compiler installed with a simple <code>gem install coffee-script</code> or check out <a href="http://github.com/jashkenas/coffee-script/">the code from/on GitHub</a>. The code is worth a look as it's notably quite vanilla with hand crafted Ruby covering the lexer and code generation and <a href="http://i.loveruby.net/en/projects/racc/doc/">Racc</a> built code for the parser.</p>
<div class="feedflare">
<a href="http://feeds.feedburner.com/~ff/RubyInside?a=4Kie8Rpj9DM:q2eZa81zpTI:yIl2AUoC8zA"><img src="http://feeds.feedburner.com/~ff/RubyInside?d=yIl2AUoC8zA" border="0"></img></a> <a href="http://feeds.feedburner.com/~ff/RubyInside?a=4Kie8Rpj9DM:q2eZa81zpTI:D7DqB2pKExk"><img src="http://feeds.feedburner.com/~ff/RubyInside?i=4Kie8Rpj9DM:q2eZa81zpTI:D7DqB2pKExk" border="0"></img></a> <a href="http://feeds.feedburner.com/~ff/RubyInside?a=4Kie8Rpj9DM:q2eZa81zpTI:3H-1DwQop_U"><img src="http://feeds.feedburner.com/~ff/RubyInside?i=4Kie8Rpj9DM:q2eZa81zpTI:3H-1DwQop_U" border="0"></img></a> <a href="http://feeds.feedburner.com/~ff/RubyInside?a=4Kie8Rpj9DM:q2eZa81zpTI:F7zBnMyn0Lo"><img src="http://feeds.feedburner.com/~ff/RubyInside?i=4Kie8Rpj9DM:q2eZa81zpTI:F7zBnMyn0Lo" border="0"></img></a>
</div><img src="http://feeds.feedburner.com/~r/RubyInside/~4/4Kie8Rpj9DM" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://www.rubyinside.com/coffeescript-a-new-language-with-a-pure-ruby-compiler-2921.html/feed</wfw:commentRss>
		<slash:comments>7</slash:comments>
		<feedburner:origLink>http://www.rubyinside.com/coffeescript-a-new-language-with-a-pure-ruby-compiler-2921.html</feedburner:origLink></item>
		<item>
		<title>Rackamole: Rack-Based Monitoring For Your Ruby Web Apps</title>
		<link>http://feedproxy.google.com/~r/RubyInside/~3/qFZeEFm6pTw/rackamole-rack-based-monitoring-for-your-ruby-web-apps-2918.html</link>
		<comments>http://www.rubyinside.com/rackamole-rack-based-monitoring-for-your-ruby-web-apps-2918.html#comments</comments>
		<pubDate>Mon, 04 Jan 2010 03:22:23 +0000</pubDate>
		<dc:creator>Peter Cooper</dc:creator>
				<category><![CDATA[Tools]]></category>

		<guid isPermaLink="false">http://www.rubyinside.com/rackamole-rack-based-monitoring-for-your-ruby-web-apps-2918.html</guid>
		<description><![CDATA[<p><img src="http://www.rubyinside.com/wp-content/uploads/2010/01/rackamole.png" width="98" height="114" alt="rackamole.png" style="float:left; margin-right:12px; margin-bottom:12px;" /><a href="http://rackamole.com/">Rackamole</a> <sup>(<a href="http://github.com/derailed/rackamole">GitHub repo</a>)</sup> is a <a href="http://rack.rubyforge.org/">Rack</a> application that lets you to monitor the interactions between users and your own Rack-based application (e.g. any Rails or Sinatra app). As well as pumping out information to the console or a log file, there's a Web interface called <a href="http://rackamole.com/home/screens">Wackamole</a> to give you the skinny on your app activity.</p>]]></description>
			<content:encoded><![CDATA[<p><img src="http://www.rubyinside.com/wp-content/uploads/2010/01/rackamole.png" width="98" height="114" alt="rackamole.png" style="float:left; margin-right:12px; margin-bottom:12px;" /><a href="http://rackamole.com/">Rackamole</a> <sup>(<a href="http://github.com/derailed/rackamole">GitHub repo</a>)</sup> is a <a href="http://rack.rubyforge.org/">Rack</a> application that lets you to monitor the interactions between users and your own Rack-based application (e.g. any Rails or Sinatra app). As well as pumping out information to the console or a log file, there's a Web interface called <a href="http://rackamole.com/home/screens">Wackamole</a> to give you the skinny on your app activity.</p>
<p>Rackamole's creator, Fernand Galiana (also of <a href="http://liquidrail.com/2008/8/24/ziya-gem-2-0">ZiYa charting library</a> fame), says that Rackamole is well suited for determining what parts of your application you need to work on next. It traps and records feature usage, performance issues, and application exceptions, and by integrating as a middle layer between your HTTP server and your Web app, it can work with almost any backend system out of the box.</p>
<p><img src="http://www.rubyinside.com/wp-content/uploads/2010/01/wackamole.png" width="480" height="323" alt="wackamole.png" /></p>
<p><i>Above: Wackamole and Rackamole in action</i></p>
<p>As well as logging data and presenting it through Wackamole, Rackamole also has a built-in e-mail notifier so you can be alerted when certain actions occur that need your attention. In this way, it's sort of like a New Relic-lite or like FiveRuns' now defunct Dash system. MongoDB fans might also appreciate that Rackamole also has support for logging to a MongoDB database out of the box.</p>
<div class="feedflare">
<a href="http://feeds.feedburner.com/~ff/RubyInside?a=qFZeEFm6pTw:YpTY1UZoyPk:yIl2AUoC8zA"><img src="http://feeds.feedburner.com/~ff/RubyInside?d=yIl2AUoC8zA" border="0"></img></a> <a href="http://feeds.feedburner.com/~ff/RubyInside?a=qFZeEFm6pTw:YpTY1UZoyPk:D7DqB2pKExk"><img src="http://feeds.feedburner.com/~ff/RubyInside?i=qFZeEFm6pTw:YpTY1UZoyPk:D7DqB2pKExk" border="0"></img></a> <a href="http://feeds.feedburner.com/~ff/RubyInside?a=qFZeEFm6pTw:YpTY1UZoyPk:3H-1DwQop_U"><img src="http://feeds.feedburner.com/~ff/RubyInside?i=qFZeEFm6pTw:YpTY1UZoyPk:3H-1DwQop_U" border="0"></img></a> <a href="http://feeds.feedburner.com/~ff/RubyInside?a=qFZeEFm6pTw:YpTY1UZoyPk:F7zBnMyn0Lo"><img src="http://feeds.feedburner.com/~ff/RubyInside?i=qFZeEFm6pTw:YpTY1UZoyPk:F7zBnMyn0Lo" border="0"></img></a>
</div><img src="http://feeds.feedburner.com/~r/RubyInside/~4/qFZeEFm6pTw" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://www.rubyinside.com/rackamole-rack-based-monitoring-for-your-ruby-web-apps-2918.html/feed</wfw:commentRss>
		<slash:comments>2</slash:comments>
		<feedburner:origLink>http://www.rubyinside.com/rackamole-rack-based-monitoring-for-your-ruby-web-apps-2918.html</feedburner:origLink></item>
		<item>
		<title>Holiday Fun: How Programming Language Fanboys See Each Others’ Languages</title>
		<link>http://feedproxy.google.com/~r/RubyInside/~3/Lc7QOm8_ttk/holiday-fun-how-programming-language-fanboys-see-each-others-languages-2911.html</link>
		<comments>http://www.rubyinside.com/holiday-fun-how-programming-language-fanboys-see-each-others-languages-2911.html#comments</comments>
		<pubDate>Tue, 22 Dec 2009 02:43:05 +0000</pubDate>
		<dc:creator>Peter Cooper</dc:creator>
				<category><![CDATA[Nonsense]]></category>

		<guid isPermaLink="false">http://www.rubyinside.com/holiday-fun-how-programming-language-fanboys-see-each-others-languages-2911.html</guid>
		<description><![CDATA[<p><img src="http://www.rubyinside.com/wp-content/uploads/2009/12/superfriends.png" width="129" height="113" alt="superfriends.png" style="float:left; margin-right:12px; margin-bottom:12px; border:1px #000000 solid;" />Overt humor isn't usually Ruby Inside's thing, but it's the holiday season, so there's nothing wrong with kicking up your heels and having a little fun. Don't worry - this won't become a habit. Promise! After the fold, check out a chart showing how programming language fanboys (Ruby's included) see each other's respective languages.</p>]]></description>
			<content:encoded><![CDATA[<p><img src="http://www.rubyinside.com/wp-content/uploads/2009/12/superfriends.png" width="129" height="113" alt="superfriends.png" style="float:left; margin-right:12px; margin-bottom:12px; border:1px #000000 solid;" />Overt humor isn't usually Ruby Inside's thing, but it's the holiday season, so there's nothing wrong with kicking up your heels and having a little fun. Don't worry - this won't become a habit. Promise! After the fold, check out a chart showing how programming language fanboys (Ruby's included) see each other's respective languages.</p>
<p style="clear: left"><a href="http://i.imgur.com/pG3q7.jpg"><img src="http://www.rubyinside.com/wp-content/uploads/2009/12/language-fanboys.jpg" width="640" height="420" alt="language-fanboys.jpg" /></a></p>
<p><em>There's a <a href="http://i.imgur.com/pG3q7.jpg">higher resolution version</a> available..</em></p>
<div class="feedflare">
<a href="http://feeds.feedburner.com/~ff/RubyInside?a=Lc7QOm8_ttk:aYJS5VP_56Y:yIl2AUoC8zA"><img src="http://feeds.feedburner.com/~ff/RubyInside?d=yIl2AUoC8zA" border="0"></img></a> <a href="http://feeds.feedburner.com/~ff/RubyInside?a=Lc7QOm8_ttk:aYJS5VP_56Y:D7DqB2pKExk"><img src="http://feeds.feedburner.com/~ff/RubyInside?i=Lc7QOm8_ttk:aYJS5VP_56Y:D7DqB2pKExk" border="0"></img></a> <a href="http://feeds.feedburner.com/~ff/RubyInside?a=Lc7QOm8_ttk:aYJS5VP_56Y:3H-1DwQop_U"><img src="http://feeds.feedburner.com/~ff/RubyInside?i=Lc7QOm8_ttk:aYJS5VP_56Y:3H-1DwQop_U" border="0"></img></a> <a href="http://feeds.feedburner.com/~ff/RubyInside?a=Lc7QOm8_ttk:aYJS5VP_56Y:F7zBnMyn0Lo"><img src="http://feeds.feedburner.com/~ff/RubyInside?i=Lc7QOm8_ttk:aYJS5VP_56Y:F7zBnMyn0Lo" border="0"></img></a>
</div><img src="http://feeds.feedburner.com/~r/RubyInside/~4/Lc7QOm8_ttk" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://www.rubyinside.com/holiday-fun-how-programming-language-fanboys-see-each-others-languages-2911.html/feed</wfw:commentRss>
		<slash:comments>41</slash:comments>
		<feedburner:origLink>http://www.rubyinside.com/holiday-fun-how-programming-language-fanboys-see-each-others-languages-2911.html</feedburner:origLink></item>
		<item>
		<title>Friendly: Easy Schemaless “NoSQL” Data Storage with MySQL in Ruby</title>
		<link>http://feedproxy.google.com/~r/RubyInside/~3/PwmvPrnTUwg/friendly-easy-schemaless-nosql-data-storage-with-mysql-in-ruby-2908.html</link>
		<comments>http://www.rubyinside.com/friendly-easy-schemaless-nosql-data-storage-with-mysql-in-ruby-2908.html#comments</comments>
		<pubDate>Mon, 21 Dec 2009 13:49:46 +0000</pubDate>
		<dc:creator>Peter Cooper</dc:creator>
				<category><![CDATA[Cool]]></category>
		<category><![CDATA[Elsewhere]]></category>

		<guid isPermaLink="false">http://www.rubyinside.com/friendly-easy-schemaless-nosql-data-storage-with-mysql-in-ruby-2908.html</guid>
		<description><![CDATA[<p><img src="http://www.rubyinside.com/wp-content/uploads/2009/12/friendly.png" width="110" height="110" alt="friendly.png" style="float:left; margin-right:12px; margin-bottom:12px; border:1px #000000 solid;" /> <a href="http://friendlyorm.com/">Friendly</a> is a new Ruby ORM (a la ActiveRecord) that lets you easily use NoSQL ideas on regular database engines, such as MySQL. Developer James Golick has written <a href="http://jamesgolick.com/2009/12/16/introducing-friendly-nosql-with-mysql-in-ruby.html">a blog post introducing Friendly</a> that goes into detail on how it works - with code examples. Effectively you get schema-less, document-like storage (with indexes!) but based around MySQL.</p>]]></description>
			<content:encoded><![CDATA[<p><img src="http://www.rubyinside.com/wp-content/uploads/2009/12/friendly.png" width="110" height="110" alt="friendly.png" style="float:left; margin-right:12px; margin-bottom:12px; border:1px #000000 solid;" /> <a href="http://friendlyorm.com/">Friendly</a> is a new Ruby ORM (a la ActiveRecord) that lets you easily use NoSQL ideas on regular database engines, such as MySQL. Developer James Golick has written <a href="http://jamesgolick.com/2009/12/16/introducing-friendly-nosql-with-mysql-in-ruby.html">a blog post introducing Friendly</a> that goes into detail on how it works - with code examples. Effectively you get schema-less, document-like storage (with indexes!) but based around MySQL.</p>
<p>If you're not familiar with "<a href="http://en.wikipedia.org/wiki/NoSQL">NoSQL</a>", it's a blanket/branding term (somewhat like AJAX or Web 2.0) that covers non-relational forms of databases that, typically, have no need for SQL. A common subset of NoSQL technologies is the "document-based database," as provided by systems like <a href="http://couchdb.apache.org/">CouchDB</a> or <a href="http://www.mongodb.org/">MongoDB</a> (for which RailsTips author John Nunemaker <a href="http://railstips.org/2009/12/18/why-i-think-mongo-is-to-databases-what-rails-was-to-frameworks">has evangelized strongly</a>).</p>
<p>An issue many people are having with the various NoSQL systems available is that they're not all "battle hardened" or as familiar to administer than their existing MySQL or Postgres systems. Social aggregator FriendFeed wrote about <a href="http://bret.appspot.com/entry/how-friendfeed-uses-mysql">how they use MySQL to store schema-less data</a>, and Friendly is based on the same techniques.</p>
<div class="feedflare">
<a href="http://feeds.feedburner.com/~ff/RubyInside?a=PwmvPrnTUwg:Zwv9ODWLXN4:yIl2AUoC8zA"><img src="http://feeds.feedburner.com/~ff/RubyInside?d=yIl2AUoC8zA" border="0"></img></a> <a href="http://feeds.feedburner.com/~ff/RubyInside?a=PwmvPrnTUwg:Zwv9ODWLXN4:D7DqB2pKExk"><img src="http://feeds.feedburner.com/~ff/RubyInside?i=PwmvPrnTUwg:Zwv9ODWLXN4:D7DqB2pKExk" border="0"></img></a> <a href="http://feeds.feedburner.com/~ff/RubyInside?a=PwmvPrnTUwg:Zwv9ODWLXN4:3H-1DwQop_U"><img src="http://feeds.feedburner.com/~ff/RubyInside?i=PwmvPrnTUwg:Zwv9ODWLXN4:3H-1DwQop_U" border="0"></img></a> <a href="http://feeds.feedburner.com/~ff/RubyInside?a=PwmvPrnTUwg:Zwv9ODWLXN4:F7zBnMyn0Lo"><img src="http://feeds.feedburner.com/~ff/RubyInside?i=PwmvPrnTUwg:Zwv9ODWLXN4:F7zBnMyn0Lo" border="0"></img></a>
</div><img src="http://feeds.feedburner.com/~r/RubyInside/~4/PwmvPrnTUwg" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://www.rubyinside.com/friendly-easy-schemaless-nosql-data-storage-with-mysql-in-ruby-2908.html/feed</wfw:commentRss>
		<slash:comments>4</slash:comments>
		<feedburner:origLink>http://www.rubyinside.com/friendly-easy-schemaless-nosql-data-storage-with-mysql-in-ruby-2908.html</feedburner:origLink></item>
		<item>
		<title>How Phusion Built A More Efficient Ruby 1.8 Interpreter</title>
		<link>http://feedproxy.google.com/~r/RubyInside/~3/XIFKBmHobJ0/how-phusion-built-a-more-efficient-ruby-1-8-interpreter-2906.html</link>
		<comments>http://www.rubyinside.com/how-phusion-built-a-more-efficient-ruby-1-8-interpreter-2906.html#comments</comments>
		<pubDate>Wed, 16 Dec 2009 09:58:26 +0000</pubDate>
		<dc:creator>Peter Cooper</dc:creator>
				<category><![CDATA[Cool]]></category>

		<guid isPermaLink="false">http://www.rubyinside.com/how-phusion-built-a-more-efficient-ruby-1-8-interpreter-2906.html</guid>
		<description><![CDATA[<p><img src="http://www.rubyinside.com/wp-content/uploads/2009/12/ninh-bui.png" width="96" height="113" alt="ninh-bui.png" style="float:left; margin-right:12px; margin-bottom:12px; border:1px #000000 solid;" /><a href="http://www.modrails.com/">Phusion Passenger</a> and <a href="http://www.rubyenterpriseedition.com/">Ruby Enterprise Edition</a> developers Ninh "Hernandez" Bui and Hongli Lai travelled to San Francisco last week and gave a 35 minute Google Tech Talk called <a href="http://www.youtube.com/watch?v=ghLCtCwAKqQ">Building A More Efficient Ruby Interpreter</a>.</p>]]></description>
			<content:encoded><![CDATA[<p><img src="http://www.rubyinside.com/wp-content/uploads/2009/12/ninh-bui.png" width="96" height="113" alt="ninh-bui.png" style="float:left; margin-right:12px; margin-bottom:12px; border:1px #000000 solid;" /><a href="http://www.modrails.com/">Phusion Passenger</a> and <a href="http://www.rubyenterpriseedition.com/">Ruby Enterprise Edition</a> developers Ninh "Hernandez" Bui and Hongli Lai travelled to San Francisco last week and gave a 35 minute Google Tech Talk called <a href="http://www.youtube.com/watch?v=ghLCtCwAKqQ">Building A More Efficient Ruby Interpreter</a>.</p>
<p>The talk focused on how the guys (with some help from other sources, including Joe Damato and Aman Gupta) have dug into MRI Ruby 1.8's internals to get some significant memory usage and thread performance improvements for their Ruby Enterprise Edition <i>branch</i> (they're not calling it a fork) of Ruby 1.8.</p>
<p>The video is presented in HD so the slides are easy to see and the audio is solid. If taking a small trip through Ruby's garbage collection, memory allocation, and threading system sounds good to you (or you just want to know what Ruby Enterprise Edition is all about), it's a must watch. If you want some practical Ruby stuff and don't care about what the interpreter's doing, give it a miss.</p>
<p><object width="640" height="385"><param name="movie" value="http://www.youtube.com/v/ghLCtCwAKqQ&#038;hl=en_US&#038;fs=1&#038;hd=1"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/ghLCtCwAKqQ&#038;hl=en_US&#038;fs=1&#038;hd=1" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="640" height="385"></embed></object></p>
<p style="background-color:#ffd;padding:8px;font-family:verdana;font-size:12px"><img src="http://www.rubyinside.com/wp-content/uploads/2009/07/jslab.png"; width="32" height="35" alt="jslab.png" style="float:left;margin-left:12px; margin-right:8px; border:1px #000000 solid;"/><em>[ad]</em> <a href="http://jumpstartlab.com" rel="nofollow">Jumpstart Lab</a> is offering <a href="http://jumpstartlab.com/courses/custom-training/"; rel="nofollow">private and corporate training in <strong>Ruby</strong> and <strong>Rails</strong></a>.  Not just great programmers, they're experienced educators available worldwide. CC-Licensed tutorials including <a href="http://jumpstartlab.com/resources/ruby-jumpstart/ruby/"; rel="nofollow">"Ruby in 100 Minutes"</a> available at <a href="http://jumpstartlab.com/resources/"; rel="nofollow">JumpstartLab.com</a></p>
<div class="feedflare">
<a href="http://feeds.feedburner.com/~ff/RubyInside?a=XIFKBmHobJ0:c7AHJYVq7FM:yIl2AUoC8zA"><img src="http://feeds.feedburner.com/~ff/RubyInside?d=yIl2AUoC8zA" border="0"></img></a> <a href="http://feeds.feedburner.com/~ff/RubyInside?a=XIFKBmHobJ0:c7AHJYVq7FM:D7DqB2pKExk"><img src="http://feeds.feedburner.com/~ff/RubyInside?i=XIFKBmHobJ0:c7AHJYVq7FM:D7DqB2pKExk" border="0"></img></a> <a href="http://feeds.feedburner.com/~ff/RubyInside?a=XIFKBmHobJ0:c7AHJYVq7FM:3H-1DwQop_U"><img src="http://feeds.feedburner.com/~ff/RubyInside?i=XIFKBmHobJ0:c7AHJYVq7FM:3H-1DwQop_U" border="0"></img></a> <a href="http://feeds.feedburner.com/~ff/RubyInside?a=XIFKBmHobJ0:c7AHJYVq7FM:F7zBnMyn0Lo"><img src="http://feeds.feedburner.com/~ff/RubyInside?i=XIFKBmHobJ0:c7AHJYVq7FM:F7zBnMyn0Lo" border="0"></img></a>
</div><img src="http://feeds.feedburner.com/~r/RubyInside/~4/XIFKBmHobJ0" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://www.rubyinside.com/how-phusion-built-a-more-efficient-ruby-1-8-interpreter-2906.html/feed</wfw:commentRss>
		<slash:comments>11</slash:comments>
		<feedburner:origLink>http://www.rubyinside.com/how-phusion-built-a-more-efficient-ruby-1-8-interpreter-2906.html</feedburner:origLink></item>
		<item>
		<title>9 New Ruby Libraries To Check Out</title>
		<link>http://feedproxy.google.com/~r/RubyInside/~3/VchaFjX3Vqk/9-new-ruby-libraries-to-check-out-2902.html</link>
		<comments>http://www.rubyinside.com/9-new-ruby-libraries-to-check-out-2902.html#comments</comments>
		<pubDate>Thu, 10 Dec 2009 15:45:00 +0000</pubDate>
		<dc:creator>Peter Cooper</dc:creator>
				<category><![CDATA[Compilation Posts]]></category>
		<category><![CDATA[Miscellaneous]]></category>

		<guid isPermaLink="false">http://www.rubyinside.com/9-new-ruby-libraries-to-check-out-2902.html</guid>
		<description><![CDATA[<p><img src="http://www.rubyinside.com/wp-content/uploads/2009/12/love-your-library.png" width="112" height="102" alt="love-your-library.png" style="float:left; margin-right:12px; margin-bottom:12px; border:1px #000000 solid;" />I love checking out new Ruby libraries, and recently many new ones have passed my eyes. The most prominent releases get their own post on Ruby Inside, but often there are less significant libraries that I'd struggle to write 100 words about yet still contribute to Ruby's lifeblood. This post aims to round up a selection of my recent discoveries.</p>]]></description>
			<content:encoded><![CDATA[<p><img src="http://www.rubyinside.com/wp-content/uploads/2009/12/love-your-library.png" width="112" height="102" alt="love-your-library.png" style="float:left; margin-right:12px; margin-bottom:12px; border:1px #000000 solid;" />I love checking out new Ruby libraries, and recently many new ones have passed my eyes. The most prominent releases get their own post on Ruby Inside, but often there are less significant libraries that I'd struggle to write 100 words about yet still contribute to Ruby's lifeblood. This post aims to round up a selection of my recent discoveries.</p>
<h3>RConfig - Powerful Ruby configuration management</h3>
<p><a href="http://github.com/rahmal/rconfig">RConfig</a>, by Rahmal Conda, bills itself as a "complete solution for Ruby configuration management" and it certainly has a compelling feature-set. It supports YAML, XML, and properties files (a bit like INI files) and provides a short hand global access to application configurations in both enumeration-based and dot-notation/method forms. It also supports what it calls "overlays" where different configurations can be used within a single app (for different "environments", say). RConfig can be installed as a gem as it's <a href="http://gemcutter.org/gems/rconfig">hosted on Gemcutter</a>.</p>
<h3>Ruby-GMail - A Rubyesque interface to GMail</h3>
<p><a href="http://github.com/dcparker/ruby-gmail">Ruby-GMail</a> is an awesome new library by Daniel Parker that provides significant GMail-specific (Google Mail) functionality within your apps. You can read/retrieve e-mails via IMAP, fully handle attachments, deal with labels, mark items as spam/unread/read, and send e-mails (including MIME messages with images and attachments).</p>
<h3><b>Excelsior - Super fast CSV parsing</b></h3>
<p><a href="http://www.toastyapps.com/excelsior/">Excelsior</a> (<a href="http://github.com/toastyapps/excelsior">GitHub</a>) is a Ruby gem by Matthew Mongeau that binds to some C code that parses CSV (comma delimited) data <i>very</i> quickly. Matthew benchmarked Excelsior against the built in Ruby 1.9 'csv' parser (based on 1.8's FasterCSV) and a 1 million row CSV file was parsed in 4.44 seconds with Excelsior versus 54 seconds for the built-in library. As well as being a useful library, the <a href="http://github.com/toastyapps/excelsior">source</a> is useful to check out if writing a native extension of your own is of interest.</p>
<h3>Linkedin - Ruby Bindings for the LinkedIn API</h3>
<p>If you don't know about it, <a href="http://www.linkedin.com/">LinkedIn</a> is basically a Facebook for business contacts and relationships. You get profiles, can message other people, and build up "connections" with other people (as an aside, if you want to add me - Peter Cooper - on your LinkedIn, <a href="http://uk.linkedin.com/in/petercooper">my profile is here</a>). Wynn Netherland has put together <a href="http://wynnnetherland.com/2009/11/link-linkedin-into-your-next-ruby-application/">a tidy Ruby library to use LinkedIn's new API</a> features. His <a href="http://wynnnetherland.com/2009/11/link-linkedin-into-your-next-ruby-application/">blog post</a> highlights some uses for it.</p>
<h3><b>Ohm - Object-hash mapping library for Redis</b></h3>
<p><a href="http://code.google.com/p/redis/">Redis</a> is one of a growing number of persistent key-value database systems, and <a href="http://ohm.keyvalue.org/">Ohm</a> is a library for storing objects in a Redis database. It was built by Citrusbyte - the team behind the <a href="http://monkrb.com/">Monk</a> Ruby Web development framework. As an aside, <a href="http://ruby.jobamatic.com/a/jbb/job-details/151556">Citrusbyte are looking for a software engineer</a> to work with them in Los Angeles.</p>
<h3>Alchemist - Conversion between units</h3>
<p><a href="http://github.com/toastyapps/alchemist">Alchemist</a> is another library by Matthew Mongeau. It makes it easy to convert between different units - such as from miles to meters or celsius to kelvin with code like <code>8.meters.to.miles</code> or in operations like <code>10.kilometers + 1.mile</code>. It was mentioned in an <a href="http://www.rubyinside.com/ruby-tidbits-29-2780.html">earlier</a> Ruby Inside post but fits in well here too.</p>
<h3>Nanotest - Super lightweight testing</h3>
<p><a href="http://github.com/mynyml/nanotest">Nanotest</a> is, perhaps, the most lightweight testing library available for Rubyists today. Billing itself as "extremely minimal," it provides the bare minimum needed to test code in a constructive manner. When it was mentioned on RubyFlow recently, <a href="http://rubyflow.com/items/3132">Nanotest got quite a bit of flack</a>..</p>
<h3>Savon - "Heavy metal" SOAP client library</h3>
<p>Unlucky enough to need to use <a href="http://en.wikipedia.org/wiki/SOAP">SOAP</a> (Simple Object Access Protocol)? <a href="http://github.com/rubiii/savon">Savon</a> presents a new, intriguing alternative to <a href="http://dev.ctor.org/soap4r">Soap4R</a> (which few people seem to be particularly complimentary about). If your SOAP service is SOAP 1.1 compliant, has a WSDL file, and doesn't need WSSE authentication, you can be calling methods in just two lines of Ruby. You can do a lot more with further tweaks, however (including SOAP 1.2 and WSSE authentication).</p>
<h3>Versionomy - A "version number" library</h3>
<p><a href="http://github.com/dazuma/versionomy">Versionomy</a> by Daniel Azuma is a library that provides tools to represent, manipulate, parse, and compare version numbers in the wide variety of versioning schemes in use. In this sense, think of it as a <a href="http://www.rubyinside.com/chronic-natural-date-parsing-for-ruby-229.html">Chronic</a> for version numbers.</p>
<div class="feedflare">
<a href="http://feeds.feedburner.com/~ff/RubyInside?a=VchaFjX3Vqk:Y1gU0v0uQ2I:yIl2AUoC8zA"><img src="http://feeds.feedburner.com/~ff/RubyInside?d=yIl2AUoC8zA" border="0"></img></a> <a href="http://feeds.feedburner.com/~ff/RubyInside?a=VchaFjX3Vqk:Y1gU0v0uQ2I:D7DqB2pKExk"><img src="http://feeds.feedburner.com/~ff/RubyInside?i=VchaFjX3Vqk:Y1gU0v0uQ2I:D7DqB2pKExk" border="0"></img></a> <a href="http://feeds.feedburner.com/~ff/RubyInside?a=VchaFjX3Vqk:Y1gU0v0uQ2I:3H-1DwQop_U"><img src="http://feeds.feedburner.com/~ff/RubyInside?i=VchaFjX3Vqk:Y1gU0v0uQ2I:3H-1DwQop_U" border="0"></img></a> <a href="http://feeds.feedburner.com/~ff/RubyInside?a=VchaFjX3Vqk:Y1gU0v0uQ2I:F7zBnMyn0Lo"><img src="http://feeds.feedburner.com/~ff/RubyInside?i=VchaFjX3Vqk:Y1gU0v0uQ2I:F7zBnMyn0Lo" border="0"></img></a>
</div><img src="http://feeds.feedburner.com/~r/RubyInside/~4/VchaFjX3Vqk" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://www.rubyinside.com/9-new-ruby-libraries-to-check-out-2902.html/feed</wfw:commentRss>
		<slash:comments>14</slash:comments>
		<feedburner:origLink>http://www.rubyinside.com/9-new-ruby-libraries-to-check-out-2902.html</feedburner:origLink></item>
		<item>
		<title>Ruby Gets An Official Spec: Heading To Become An ISO International Standard</title>
		<link>http://feedproxy.google.com/~r/RubyInside/~3/Vj1rDMKckH8/ruby-iso-spec-draft-2900.html</link>
		<comments>http://www.rubyinside.com/ruby-iso-spec-draft-2900.html#comments</comments>
		<pubDate>Mon, 07 Dec 2009 13:55:15 +0000</pubDate>
		<dc:creator>Peter Cooper</dc:creator>
				<category><![CDATA[News]]></category>

		<guid isPermaLink="false">http://www.rubyinside.com/ruby-iso-spec-draft-2900.html</guid>
		<description><![CDATA[<p><img src="http://www.rubyinside.com/wp-content/uploads/2009/12/red-specs.png" width="99" height="89" alt="red-specs.png" style="float:left; margin-right:12px; margin-bottom:12px;" />It's long been a bone of contention in the Ruby world that Ruby, as a programming language, doesn't have an <i>official</i> spec (though <a href="http://rubyspec.org/">RubySpec</a> has been a noble, community effort to build an executable specification for Ruby). Now, though, there's <a href="http://ruby-std.netlab.jp/">a <i>draft</i>, official Ruby specification available</a> for you to check out- based on Ruby 1.8.7 (which <a href="http://joefiorini.com/post/266523563/the-ruby-draft-specification">some</a> aren't happy about).</p>]]></description>
			<content:encoded><![CDATA[<p><img src="http://www.rubyinside.com/wp-content/uploads/2009/12/red-specs.png" width="99" height="89" alt="red-specs.png" style="float:left; margin-right:12px; margin-bottom:12px;" />It's long been a bone of contention in the Ruby world that Ruby, as a programming language, doesn't have an <i>official</i> spec (though <a href="http://rubyspec.org/">RubySpec</a> has been a noble, community effort to build an executable specification for Ruby). Now, though, there's <a href="http://ruby-std.netlab.jp/">a <i>draft</i>, official Ruby specification available</a> for you to check out- based on Ruby 1.8.7 (which <a href="http://joefiorini.com/post/266523563/the-ruby-draft-specification">some</a> aren't happy about).</p>
<p>From the announcement:</p>
<blockquote>
<p>For wider and more application of Ruby language, "Ruby Standardization Working Group" has been established under Information-technology Promotion Agency, Japan (IPA) to define the specification of Ruby language on Oct. 2008. Since then the WG has been drafting the specification of Ruby language.</p>
<p>As the first draft of Ruby language specification has just recently completed, we'd like to request users and developers of Ruby communities to review it.</p>
<p>By gathering review comments widely from you, we are going to improve the draft of Ruby language specification further. Then we will propose the improved draft to Japanese Industrial Standards Committee (JISC) to be JIS. After JIS for Ruby has been published, <b>we will propose it to International Standardization Organization (ISO/IEC JTC1) to be International Standard.</b></p>
</blockquote>
<p>Why now? In <a href="http://www.ruby-forum.com/topic/169195">a ruby-core thread</a> about the forthcoming standard, Shugo Maeda spills the beans:</p>
<blockquote>
<p>In addition, one of reasons why we need open standard for Ruby is that the basic guideline for the government procurement in Japan require it. In that policy, we should refer to open standards instead of specific products for fair competition.</p>
</blockquote>
<p>While the prospect of getting cushy government contracts is appealing to Japanese Rubyists, it could also start to play a role elsewhere as governments start to ride their own open standards/open source bandwagons.</p>
<p>Ultimately, this news isn't going to matter to the majority of Rubyists yet, but becoming an international standard will ultimately lend more legitimacy to a language that has been flagging in popularity lately. If you want to jump right to checking out the standard (available only as a PDF at the moment), <a href="http://ruby-std.netlab.jp/draft_spec/agreement.html">click here</a>.</p>
<div class="feedflare">
<a href="http://feeds.feedburner.com/~ff/RubyInside?a=Vj1rDMKckH8:_yNVk3p6Q0Y:yIl2AUoC8zA"><img src="http://feeds.feedburner.com/~ff/RubyInside?d=yIl2AUoC8zA" border="0"></img></a> <a href="http://feeds.feedburner.com/~ff/RubyInside?a=Vj1rDMKckH8:_yNVk3p6Q0Y:D7DqB2pKExk"><img src="http://feeds.feedburner.com/~ff/RubyInside?i=Vj1rDMKckH8:_yNVk3p6Q0Y:D7DqB2pKExk" border="0"></img></a> <a href="http://feeds.feedburner.com/~ff/RubyInside?a=Vj1rDMKckH8:_yNVk3p6Q0Y:3H-1DwQop_U"><img src="http://feeds.feedburner.com/~ff/RubyInside?i=Vj1rDMKckH8:_yNVk3p6Q0Y:3H-1DwQop_U" border="0"></img></a> <a href="http://feeds.feedburner.com/~ff/RubyInside?a=Vj1rDMKckH8:_yNVk3p6Q0Y:F7zBnMyn0Lo"><img src="http://feeds.feedburner.com/~ff/RubyInside?i=Vj1rDMKckH8:_yNVk3p6Q0Y:F7zBnMyn0Lo" border="0"></img></a>
</div><img src="http://feeds.feedburner.com/~r/RubyInside/~4/Vj1rDMKckH8" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://www.rubyinside.com/ruby-iso-spec-draft-2900.html/feed</wfw:commentRss>
		<slash:comments>17</slash:comments>
		<feedburner:origLink>http://www.rubyinside.com/ruby-iso-spec-draft-2900.html</feedburner:origLink></item>
		<item>
		<title>Ruby 1.9.1-p376 Released: Fixes A Heap Overflow Vulnerability And More</title>
		<link>http://feedproxy.google.com/~r/RubyInside/~3/fSeIBmSSTZA/ruby-1-9-1-p376-released-fixes-a-heap-overflow-vulnerability-and-more-2898.html</link>
		<comments>http://www.rubyinside.com/ruby-1-9-1-p376-released-fixes-a-heap-overflow-vulnerability-and-more-2898.html#comments</comments>
		<pubDate>Mon, 07 Dec 2009 12:28:46 +0000</pubDate>
		<dc:creator>Peter Cooper</dc:creator>
				<category><![CDATA[News]]></category>

		<guid isPermaLink="false">http://www.rubyinside.com/ruby-1-9-1-p376-released-fixes-a-heap-overflow-vulnerability-and-more-2898.html</guid>
		<description><![CDATA[<p><img src="http://www.rubyinside.com/wp-content/uploads/2009/12/head-palm-slap.png" width="120" height="120" alt="head-palm-slap.png" style="float:left; margin-right:12px; margin-bottom:12px; border:1px #000000 solid;" /> Uh oh, it's upgrade time again. Today, the official Ruby 1.9 maintainer (Yuki Sonoda, a.k.a. Yugui) announced <a href="http://www.ruby-lang.org/en/news/2009/12/07/heap-overflow-in-string/">a heap overflow vulnerability in Ruby 1.9.1</a> and, subsequently, the <a href="http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/352175">release of Ruby 1.9.1-p376</a> (patch level 376). As the current production level release of Ruby, this is a crucial upgrade - unless you're still using Ruby 1.8.x, which isn't affected at all.</p>]]></description>
			<content:encoded><![CDATA[<p><img src="http://www.rubyinside.com/wp-content/uploads/2009/12/head-palm-slap.png" width="120" height="120" alt="head-palm-slap.png" style="float:left; margin-right:12px; margin-bottom:12px; border:1px #000000 solid;" /> Uh oh, it's upgrade time again. Today, the official Ruby 1.9 maintainer (Yuki Sonoda, a.k.a. Yugui) announced <a href="http://www.ruby-lang.org/en/news/2009/12/07/heap-overflow-in-string/">a heap overflow vulnerability in Ruby 1.9.1</a> and, subsequently, the <a href="http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/352175">release of Ruby 1.9.1-p376</a> (patch level 376). As the current production level release of Ruby, this is a crucial upgrade - unless you're still using Ruby 1.8.x, which isn't affected at all.</p>
<p>As well as fixing the vulnerability, Ruby 1.9.1-p376 also includes over 100 bug fixes on the previous release, none of which are particularly interesting. You can check <a href="http://svn.ruby-lang.org/repos/ruby/branches/ruby_1_9_1/ChangeLog">this release's change log</a> to see if anything affects you.</p>
<p>If you want to download Ruby 1.9.1-p376 now, the following URLs will work direct:</p>
<ul>
<li><a href="http://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.1-p376.tar.bz2">http://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.1-p376.tar.bz2</a></li>
<li><a href="http://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.1-p376.tar.gz">http://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.1-p376.tar.gz</a></li>
<li><a href="http://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.1-p376.zip">http://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.1-p376.zip</a></li>
</ul>
<p>Further, Danny Tatom has put together <a href="http://gist.github.com/250699">a PKGBUILD file for Ruby 1.9.1-p376</a> for <a href="http://www.archlinux.org/">Arch Linux</a> users. As an aside, Arch Linux is worth a look if you haven't heard of it yet. It's basically a lightweight, heavily customizable, developer focused Linux distribution that's less annoying than Gentoo, and a little more BSD-like than the average Linux distro.</p>
<p style="background-color:#ffd;padding:8px;font-family:verdana;font-size:12px"><a href="http://devver.net/caliper" rel="nofollow"><img src="http://www.rubyinside.com/wp-content/uploads/2009/10/caliper-logo.png" width="98" height="42" alt="caliper-logo.png" style="float:right; margin-bottom:8px; margin-left:12px;" /></a><em>[ad]</em> Find duplication, code smells, complex code and more in your Ruby code with <a href="http://devver.net/caliper" rel="nofollow">Caliper!</a> The metrics are free and setup takes just one click. <a href="http://devver.net/caliper" rel="nofollow">Get started!</a></p>
<div class="feedflare">
<a href="http://feeds.feedburner.com/~ff/RubyInside?a=fSeIBmSSTZA:5ZcP7XyHBJM:yIl2AUoC8zA"><img src="http://feeds.feedburner.com/~ff/RubyInside?d=yIl2AUoC8zA" border="0"></img></a> <a href="http://feeds.feedburner.com/~ff/RubyInside?a=fSeIBmSSTZA:5ZcP7XyHBJM:D7DqB2pKExk"><img src="http://feeds.feedburner.com/~ff/RubyInside?i=fSeIBmSSTZA:5ZcP7XyHBJM:D7DqB2pKExk" border="0"></img></a> <a href="http://feeds.feedburner.com/~ff/RubyInside?a=fSeIBmSSTZA:5ZcP7XyHBJM:3H-1DwQop_U"><img src="http://feeds.feedburner.com/~ff/RubyInside?i=fSeIBmSSTZA:5ZcP7XyHBJM:3H-1DwQop_U" border="0"></img></a> <a href="http://feeds.feedburner.com/~ff/RubyInside?a=fSeIBmSSTZA:5ZcP7XyHBJM:F7zBnMyn0Lo"><img src="http://feeds.feedburner.com/~ff/RubyInside?i=fSeIBmSSTZA:5ZcP7XyHBJM:F7zBnMyn0Lo" border="0"></img></a>
</div><img src="http://feeds.feedburner.com/~r/RubyInside/~4/fSeIBmSSTZA" height="1" width="1"/>]]></content:encoded>
			<wfw:commentRss>http://www.rubyinside.com/ruby-1-9-1-p376-released-fixes-a-heap-overflow-vulnerability-and-more-2898.html/feed</wfw:commentRss>
		<slash:comments>2</slash:comments>
		<feedburner:origLink>http://www.rubyinside.com/ruby-1-9-1-p376-released-fixes-a-heap-overflow-vulnerability-and-more-2898.html</feedburner:origLink></item>
	</channel>
</rss>
